@model PagedList.IPagedList<ASP.NET_Project.ViewModels.ProductViewModel>
@using PagedList.Mvc;
@{
    Layout = null;
}

<h4 class="card-title">Product</h4>
<p class="card-description d-sm-flex">
    <span class="text-muted text-small my-auto">Click product name to see detail</span>
    <br class="d-sm-none" />

    @*<a class="btn btn-sm btn-primary ml-auto mr-2 mt-2 mt-sm-0" href="@Url.Action("Create", "Products")">
            Create New <span class="mdi mdi-plus-circle"></span>
        </a>*@
</p>
<div class="row">
    @foreach (var item in Model)
    {
        <div class="col-sm-6 col-lg-5 mx-lg-auto mx-xl-0 col-xl-3 grid-margin stretch-card">
            <div class="card">
                <div class="card-img-top text-center pt-3">
                    <img src="@item.Picture"
                         style="max-width: 100%; max-height: 180px; padding: 4px;" alt="Product" />
                </div>
                <div class="card-body text-center">
                    <h5 class="card-title text-center">
                        <a class="text-dark" href="@Url.Action("Details", "Products", new {id = item.Id})">
                            <b>
                                @Html.DisplayFor(model => item.Name)
                            </b>
                        </a>
                    </h5>
                    <h4 class="text-primary font-weight-bold text-center">
                        $ @Html.DisplayFor(model => item.Price)
                    </h4>
                    <hr />
                    <p class="card-text text-center">
                        <a class="text-decoration-none text-dark text-small" href="/Products?advanceBrand=@Html.DisplayFor(model => item.BrandId)">
                            <b>@Html.DisplayFor(model => item.BrandName)</b>
                        </a>
                        -
                        <a class="text-decoration-none text-dark text-small text-muted" href="/Products?advanceCategory=@Html.DisplayFor(model => item.CateId)">
                            @Html.DisplayFor(model => item.CateName)
                        </a>
                    </p>
                    <div class="d-sm-flex">
                        <button class="btn-primary btn btn-sm mx-auto"
                                @{ if (item.InStoke <= 0) { @: disabled="disabled"
                                   } }>
                            @{
                                if (item.InStoke <= 0)
                                {
                                    <span>Out of stock</span>
                                }
                                else
                                {
                                    <span> Add to cart</span>
                                }
                            }
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<div class="row">
    <div class="col mx-auto text-center">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>
<div class="row paging-control mt-2">
    <div class="mx-auto text-center">
        @Html.PagedListPager(Model, page => Url.Action("Index",
            new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    </div>
</div>
@*<table class="table" id="update-product">
        <thead class="text-primary">
            <tr>
                <th>
                    #
                </th>
                <th>
                    Image
                </th>
                <th class="text-center d-none d-sm-table-cell">
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th class="d-none d-sm-table-cell">
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th class="d-none d-xl-table-cell">
                    @Html.DisplayNameFor(model => model.Price)
                </th>
                <th class="text-center d-none d-xl-table-cell">
                    @Html.DisplayNameFor(model => model.InStoke)
                </th>
                <th class="text-center d-none d-lg-table-cell">
                    Edit
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {

                <tr>
                    <td>
                        <b class="text-small">@Html.DisplayFor(modelItem => item.Id)</b>
                    </td>
                    <td>
                        <img src="https://res.cloudinary.com/senbonzakura/image/upload/c_scale,w_100/v1573643062/images/product/product_qisxsg.png"
                             style="max-height: 100%" alt="image">
                    </td>
                    <td class="text-center d-none d-sm-table-cell">
                        <a class="badge w-100
                                            @(item.InStoke > 10 ? "badge-success" :
                                                item.InStoke > 5 && item.InStoke <= 10 ? "badge-warning" :
                                                    item.InStoke > 0 && item.InStoke <= 5 ? "badge-danger" : "badge-secondary")
                                                w-100" href="@Url.Action("Details", "Products", new {id = item.Id})">
                            @Html.DisplayFor(modelItem => item.Name)
                        </a>
                    </td>
                    <td class="d-none d-sm-table-cell">
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td class="d-none d-xl-table-cell">
                        $ @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td class="text-center d-none d-xl-table-cell">
                        @Html.DisplayFor(modelItem => item.InStoke)
                    </td>
                    <td class="text-center d-none d-lg-table-cell">
                        <a class="badge badge-warning" href="@Url.Action("Edit", "Products", new {id = item.Id})">
                            <span class="mdi mdi-pencil-box-outline"></span>
                        </a>
                    </td>
                </tr>

            }
        </tbody>
    </table>*@
