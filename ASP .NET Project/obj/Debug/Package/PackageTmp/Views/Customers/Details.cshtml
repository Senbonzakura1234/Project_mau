@using ASP.NET_Project.Models
@model ASP.NET_Project.Models.Customer

@{
    ViewBag.Title = "Customer - Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-6 col-xl-4 grid-margin stretch-card">
        <div class="card">
            <div class="card-img-top text-center pt-3">
                <img class="border-primary" src="https://res.cloudinary.com/senbonzakura/image/upload/v1573316680/images/faces/avatar2_p9btpy.png" 
                     style="max-width: 100%; max-height: 180px; padding: 4px; border: 2px solid; border-radius: 100%" alt="Avatar"/>
            </div>
            <div class="card-body">
                <h5 class="card-title">
                    <b>Customer # @Html.DisplayFor(model => model.Id)</b>
                </h5>
                <p class="card-text">
                    <b>@Html.DisplayNameFor(model => model.Fullname): </b>
                    @Html.DisplayFor(model => model.Fullname)
                </p>
                <p class="card-text">
                    <b>@Html.DisplayNameFor(model => model.Email): </b>
                    @Html.DisplayFor(model => model.Email)
                </p>
                <p class="card-text">
                    <b>@Html.DisplayNameFor(model => model.Phone): </b>
                    @Html.DisplayFor(model => model.Phone)
                </p>
                <p class="card-text">
                    <b>@Html.DisplayNameFor(model => model.Password): </b>
                    @Html.DisplayFor(model => model.Password)
                </p>
                <p class="card-text">
                    <b>@Html.DisplayNameFor(model => model.Age): </b>
                    @Html.DisplayFor(model => model.Age)
                </p>
                <p class="card-text">
                    <b>@Html.DisplayNameFor(model => model.Gender): </b>
                    @Html.DisplayFor(model => model.Gender)
                    <i class="mdi @(Model.Gender == Customer.GenderEnum.Male ? "mdi-gender-male text-info" :
                                      Model.Gender == Customer.GenderEnum.Female ? "mdi-gender-female text-danger" :
                                          Model.Gender == Customer.GenderEnum.Undefined ? "mdi-gender-transgender text-primary" :
                                                                  "mdi-lock text-dark")"></i>
                </p>
                <p class="card-text">
                    <b>@Html.DisplayNameFor(model => model.Status): </b>
                    <span class="badge @(Model.Status == Customer.StatusEnum.Inactive ? "badge-gradient-secondary" :
                                                 Model.Status == Customer.StatusEnum.Active ? "badge-gradient-success" :
                                                     Model.Status == Customer.StatusEnum.Locked ? "badge-gradient-warning" :
                                                         Model.Status == Customer.StatusEnum.Banned ? "badge-gradient-danger" : "badge-gradient-dark")">
                        @Html.DisplayFor(model => model.Status)
                    </span>
                </p>
                <div class="d-sm-flex">
                    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }, new { @class = "btn btn-sm btn-warning mr-3" })
                    <button type="button" class="btn btn-danger btn-sm mr-3" data-toggle="modal" data-target="#exampleModal">
                        Delete
                    </button>
                    <a class="btn btn-light btn-sm mt-2 mt-sm-0" href="@Url.Action("Index")">
                        Back
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content bg-white">
            <div class="modal-header border-0">
                <h4 class="modal-title" id="exampleModalLabel">Confirm Delete</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure to completely delete this customer account?
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-light" data-dismiss="modal">Cancel</button>
                @using (Html.BeginForm("Delete", "Customers", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.Id)
                    <input type="submit" value="Delete" class="btn btn-danger" />
                }
            </div>
        </div>
    </div>
</div>